buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.2.1"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

ext {
    junitVersion = project.hasProperty('junitVersion') ? rootProject.ext.junitVersion : '4.13.2'
    androidxAppCompatVersion = project.hasProperty('androidxAppCompatVersion') ? rootProject.ext.androidxAppCompatVersion : '1.7.0'
    androidxJunitVersion = project.hasProperty('androidxJunitVersion') ? rootProject.ext.androidxJunitVersion : '1.2.1'
    androidxEspressoCoreVersion = project.hasProperty('androidxEspressoCoreVersion') ? rootProject.ext.androidxEspressoCoreVersion : '3.6.1'
}


android {
    namespace "it.immersea.libdivecomputerplugin"
    compileSdk project.hasProperty('compileSdkVersion') ? rootProject.ext.compileSdkVersion : 35

    defaultConfig {
        minSdkVersion project.hasProperty('minSdkVersion') ? rootProject.ext.minSdkVersion : 23
        targetSdkVersion project.hasProperty('targetSdkVersion') ? rootProject.ext.targetSdkVersion : 35
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        // Restrict to ARM64-v8a ABI
        ndk {
            abiFilters "arm64-v8a"
        }
    }
    //Configure CMake for native plugin code
    externalNativeBuild {
        cmake {
            // point to the pluginâ€™s CMakeLists.txt inside src/main/cpp
            path file("src/main/cpp/CMakeLists.txt")
        }
    }
    // Ensure Gradle picks up any prebuilt .so in jniLibs
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

androidComponents {
    beforeVariants(selector().all()) {
        it.enable = it.name in ["release", "debug"]
    }
}

publishing {
    publications {
        release(MavenPublication) {
            afterEvaluate {
                from components.findByName("release")
            }
            groupId = "it.immersea"
            artifactId = "libdivecomputer"
            version = "1.0.0"
        }
        debug(MavenPublication) {
            afterEvaluate {
                from components.findByName("debug")
            }
            groupId = "it.immersea"
            artifactId = "libdivecomputer-debug"
            version = "1.0.0"
        }
    }
}

repositories {
    google()
    mavenCentral()
}


dependencies {
    implementation 'com.getcapacitor:capacitor-android:7.4.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation 'androidx.annotation:annotation:1.7.1'
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
}
